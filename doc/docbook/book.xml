<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
	<!ENTITY TutorialUserCc SYSTEM "book_tutorial_cc.xml">
]>

<book >
  <title>Visual Assert</title>
	<bookinfo>
		<releaseinfo>Release 1.0</releaseinfo>
		<author>Johannes Passing</author>
	</bookinfo>

	<toc/>

	<chapter id="Preface">
		<title>Preface</title>
		<section id="Legal">
			<title>Legal notice</title>
			<para>
			Copyright of this document 2007-2009 Johannes Passing. All rights reserved.
			</para>
			<para>
			Microsoft, Active Directory, ActiveMovie, ActiveX, BackOffice, ClearType, Developer Studio, Direct3D, Direct Animation, 
			DirectDraw, DirectInput, DirectMusic, DirectPlay, DirectShow, DirectSound, DirectX, IntelliMouse, JScript, Microsoft Press, 
			MSDN, MSN, MS-DOS, Natural, NetMeeting, NetShow, Sidewalk, Visual Basic, Visual C++, Visual C#, Visual FoxPro, Visual J++, 
			Visual Studio, WebTV, Win32, Win32s, Windows, Windows NT, and Windows Server are either registered trademarks or trademarks 
			of Microsoft Corporation in the United States and/or other countries.
			</para>
			<para>
			Java is a trademark of Sun Microsystems.
			</para>
			<para>
			Usage of this documentation is subject to the <link linkend="EULA">End User License Agreement</link>.
			</para>
		</section>
		<section id="Terms">
			<title>Terms used</title>
			<para>
			The following terms are used throughout this documentation.
			</para>
			<simplesect>
				<title>Test Case</title>
				<para>
					A Test Case<indexterm><primary>Test Case</primary></indexterm> contains the actual testing code. It utilizes assertions etc. to report
					success or failure of certain operations. A test case is implemented as a single routine.
				</para>
				<para>
					This understanding corresponds to test methods (i.e. methods decorated with [Test]) in NUnit.
				</para>
			</simplesect>
			<simplesect>
				<title>Test Fixture</title>
				<para>
					A Test Fixture<indexterm><primary>Test Fixture</primary></indexterm> is a collection of test cases, accompanied by a setup and teardown routine.
				</para>
				<para>
					This understanding corresponds to test classes (i.e. classes decorated with [TestFixture]) in NUnit.
				</para>
			</simplesect>
			<simplesect>
				<title>Test Module</title>
				<para>
					All fixtures are compiled and linked into a single binary, which is either a DLL or EXE file. This DLL or EXE file
					is referred to as Test Module<indexterm><primary>Test Module</primary></indexterm>.
				</para>
			</simplesect>
			<simplesect>
				<title>Test Suite</title>
				<para>
					A collection of one or more test modules is referred to as test suite.
				</para>
			</simplesect>
		</section>
	</chapter>
	
	&TutorialUserCc;

	<chapter id="UI">
		<title>The User Interface</title>
		
		<section id="KeyboardShortcuts">
			<title>Keyboard Shortcuts</title>
			
			<simplesect>
				<title>Global</title>
				
				<para>
					<itemizedlist>
						<listitem><emphasis>Ctrl+1,Ctrl+e</emphasis>: Open Test Explorer Window</listitem>
						<listitem><emphasis>Ctrl+1,Ctrl+r</emphasis>: Open Run Window</listitem>
						<listitem><emphasis>Ctrl+1,Ctrl+s</emphasis>: Restart last run (with debugger)</listitem>
						<listitem><emphasis>Ctrl+1,Ctrl+d</emphasis>: Restart last run without debugging</listitem>
					</itemizedlist>
				</para>
				<note>
					You can assign custom keyboard shortcuts to the commands listed above in the Options 
					dialog of Visual Studio (Environment &gt; Keyboard) -- all cfix commands are prefixed
					 with <emphasis>Visual Assert</emphasis>.
				</note>
			</simplesect>
			
			<simplesect>
				<title>Test Explorer Window</title>
				
				<para>
					<itemizedlist>
						<listitem><emphasis>Enter</emphasis>: Go to source code currently selected test</listitem>
						<listitem><emphasis>Ctrl+Enter</emphasis>: Run currently selected test (with debugger)</listitem>
						<listitem><emphasis>Ctrl+Shift+Enter</emphasis>: Run currently selected test without debugging</listitem>
					</itemizedlist>
				</para>
			</simplesect>
			
			<simplesect>
				<title>Run Window</title>
				
				<para>
					<itemizedlist>
						<!--<listitem><emphasis>Enter</emphasis>: Go to source code currently selected test</listitem>-->
						<listitem><emphasis>Ctrl+Enter</emphasis>: Run currently selected test (with debugger)</listitem>
						<listitem><emphasis>Ctrl+Shift+Enter</emphasis>: Run currently selected test without debugging</listitem>
					</itemizedlist>
				</para>
			</simplesect>
		</section>
	</chapter>
	
	<chapter id="CfixFramework">
		<title>The cfix testing framework</title>
		
		<para>
			Visual Assert is built on top of the cfix testing framework, which is a full-fledged, open source unit testing framework for
			C and C++ code on Windows platforms. In other words: Visual Assert is a superset of and fully compatible to the cfix testing framework. In particular,
			this means that any tests created using Visual Assert can also be run using the appropriate command line tools.
		</para>
		<para>
			The following sections provide an overview of the cfix testing framework, its background, and usage.
		</para>
		
		<section id="Background">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(//chapter[@id='Background']/*)" href="..\__cfix.xml" />
		</section>
		
		<section id="Usage">
			<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(//chapter[@id='Usage']/*)" href="..\__cfix.xml" />
		</section>
	</chapter>
	
	<chapter id="API">
		<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(//chapter[@id='API']/*)" href="..\__cfix.xml" />
	</chapter>
	<!--
	<chapter id="EULA">
		<title>End User License Agreement</title>
		...
	</chapter>
	-->
</book>