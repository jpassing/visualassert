import "oaidl.idl";
import "ocidl.idl";

//57f93e44-d44f-11dd-99e2-0016d3b98f9b
//57f93e45-d44f-11dd-99e2-0016d3b98f9b
//57f93e46-d44f-11dd-99e2-0016d3b98f9b
//57f93e47-d44f-11dd-99e2-0016d3b98f9b
//57f93e48-d44f-11dd-99e2-0016d3b98f9b
//57f93e49-d44f-11dd-99e2-0016d3b98f9b
//57f93e4a-d44f-11dd-99e2-0016d3b98f9b
//57f93e4b-d44f-11dd-99e2-0016d3b98f9b
//57f93e4c-d44f-11dd-99e2-0016d3b98f9b
//57f93e4d-d44f-11dd-99e2-0016d3b98f9b
//57f93e4e-d44f-11dd-99e2-0016d3b98f9b
//57f93e4f-d44f-11dd-99e2-0016d3b98f9b
//57f93e50-d44f-11dd-99e2-0016d3b98f9b
//57f93e51-d44f-11dd-99e2-0016d3b98f9b
//57f93e52-d44f-11dd-99e2-0016d3b98f9b
//57f93e53-d44f-11dd-99e2-0016d3b98f9b
//57f93e54-d44f-11dd-99e2-0016d3b98f9b
//


[
	uuid( 57f93e5a-d44f-11dd-99e2-0016d3b98f9b ),
	helpstring( "Cfix Control Library" ),
	version( 1.0 )	// N.B. Also update self-registration code.
]
library Cfixctl
{
	interface ICfixTestItem;
	interface ICfixTestModule;

	typedef 
	[
		uuid( 57f93e5d-d44f-11dd-99e2-0016d3b98f9b ), 
		v1_enum,
		version( 1.0 )
	]
	enum CfixTestModuleType {
		CfixTestModuleTypeUser		= 0,
		CfixTestModuleTypeKernel	= 1,
		CfixTestModuleTypeMax		= 1
	} CfixTestModuleType;

	typedef 
	[
		uuid( 57f93e5c-d44f-11dd-99e2-0016d3b98f9b ), 
		v1_enum,
		version( 1.0 )
	]
	enum CfixTestModuleArch {
		CfixTestModuleArchI386		= 0,
		CfixTestModuleArchAmd64		= 1,
		CfixTestModuleArchMax		= 1
	} CfixTestModuleArch;

	[
	  object,
	  uuid( 57f93e40-d44f-11dd-99e2-0016d3b98f9b ),
	  version( 1.0 ),
	  oleautomation
	]
	interface ICfixHost : IUnknown 
	{
		/*++
			Method Description:
				Load a test module from the given file. The architecture
				of the module must match the architecture of the
				current process.

			Arguments:
				Path		- Path to module.
				Module		- Result.
		--*/
		HRESULT LoadModule(
			[in] const BSTR Path,
			[out, retval] ICfixTestModule **Module
			);

		/*++
			Method Description:
				Get the architecture of the host process.

			Arguments:
				Arch		- Result.
		--*/
		HRESULT GetArchitecture(
			[out] CfixTestModuleArch *Arch
			);
	}

	[
	  object,
	  uuid( 57f93e41-d44f-11dd-99e2-0016d3b98f9b ),
	  version( 1.0 ),
	  oleautomation
	]
	interface ICfixAction : IUnknown 
	{
		HRESULT Run( /*... */ );
	}


	/*----------------------------------------------------------------------
	 *
	 * Test Object Model
	 *
	 */

	[
	  object,
	  uuid( 57f93e42-d44f-11dd-99e2-0016d3b98f9b ),
	  version( 1.0 ),
	  oleautomation
	]
	interface ICfixTestItem : IUnknown 
	{
		/*++
			Method Description:
				Get the name to the test item.

			Arguments:
				Name		- Result.
		--*/
		HRESULT GetName(
			[out, retval] BSTR *Name
			);

		/*++
			Method Description:
				Create a run object for this test item and all its
				descendant test items.

			Arguments:
				Flags		- CFIX_FIXTURE_EXECUTION_* (optional).
				Reserved	- Must be 0.
				Action		- Result.
		--*/
		HRESULT CreateExecutionAction(
			[in] ULONG Flags,
			[in] ULONG Reserved,
			[out, retval] ICfixAction **Action
			);
	}

	[
	  object,
	  uuid( 57f93e58-d44f-11dd-99e2-0016d3b98f9b ),
	  version( 1.0 ),
	  oleautomation
	]
	interface ICfixTestContainer : IUnknown 
	{
		HRESULT GetItemCount(
			[out, retval] ULONG *Count
			);

		HRESULT GetItem(
			[in] ULONG Ordinal,
			[out, retval] ICfixTestItem **Item
			);
	}

	[
	  object,
	  uuid( 57f93e5b-d44f-11dd-99e2-0016d3b98f9b ),
	  version( 1.0 ),
	  oleautomation
	]
	interface ICfixTestModule : ICfixTestItem 
	{
		/*++
			Method Description:
				Get the path to the module corresponding to this object.

			Arguments:
				Path		- Result.
		--*/
		HRESULT GetPath(
			[out, retval] BSTR *Path
			);

		/*++
			Method Description:
				Get the type of the test module.

			Arguments:
				Type		- Result.
		--*/
		HRESULT GetType(
			[out] CfixTestModuleType *Type,
			[out] CfixTestModuleArch *Arch
			);
	}

	const ULONG CFIXCTL_EXECUTE_ALL = 0xFFFFFFFF;

	[
	  object,
	  uuid( 57f93e59-d44f-11dd-99e2-0016d3b98f9b ),
	  version( 1.0 ),
	  oleautomation
	]
	interface ICfixActionFactory : IUnknown
	{
		/*++
			Method Description:
				Create action for module, fixture, or test case.

				N.B. This method is for internal use only.

			Arguments:
				FixtureOrdinal	- Ordinal of fixture or CFIXCTL_EXECUTE_ALL.
				TestCaseOrdinal	- Ordinal of test case or CFIXCTL_EXECUTE_ALL.
				Flags			- CFIX_FIXTURE_EXECUTION_* (optional).
				Reserved		- Must be 0.
				Action			- Result.
		--*/
		HRESULT CreateExecutionAction(
			[in] ULONG FixtureOrdinal,
			[in] ULONG TestCaseOrdinal,
			[in] ULONG Flags,
			[in] ULONG Reserved,
			[out, retval] ICfixAction **Action
			);
	}

	[
		uuid( 57f93e43-d44f-11dd-99e2-0016d3b98f9b )
	]
	coclass Host
	{
		interface ICfixHost;
	}

	[
		uuid( 57f93e55-d44f-11dd-99e2-0016d3b98f9b ),
		noncreatable 
	]
	coclass TestModule
	{
		[default] interface ICfixTestModule;
		interface ICfixActionFactory;
		interface IOleItemContainer;
	}

	[
		uuid( 57f93e56-d44f-11dd-99e2-0016d3b98f9b ),
		noncreatable 
	]
	coclass TestFixture
	{
		[default] interface ICfixTestItem;
		interface IOleItemContainer;
	}

	[
		uuid( 57f93e57-d44f-11dd-99e2-0016d3b98f9b ),
		noncreatable 
	]
	coclass TestCase
	{
		[default] interface ICfixTestItem;
	}
}